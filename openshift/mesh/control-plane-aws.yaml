# apiVersion: v1
# kind: Namespace
# metadata:
#   name: istio-system
---
apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  name: aws
  namespace: istio-system
spec:
  general:
    logging:
      componentLevels:
        istio_pilot: debug
        istio_policy: debug
        istio_telemetry: warn
        istio_cni: debug
        istiod: debug
        envoy: debug
  version: v2.3
  security:
    identity:
      type: ThirdParty  # required setting for ROSA
    trust:
      domain: aws.dustinscott.io
  tracing:
    type: Jaeger
    sampling: 10000
  policy:
    type: Istiod
  addons:
    grafana:
      enabled: true
    jaeger:
      install:
        storage:
          type: Memory
    kiali:
      enabled: true
    prometheus:
      enabled: true
  telemetry:
    type: Istiod
  gateways:
    additionalEgress:
      egress-azure-mesh:
        enabled: true
        requestedNetworkView:
        - azure-network
        routerMode: sni-dnat
        service:
          metadata:
            labels:
              federation.maistra.io/egress-for: egress-azure-mesh
          ports:
          - port: 15443
            name: tls
          - port: 8188
            name: http-discovery  # note HTTP here
    additionalIngress:
      ingress-azure-mesh:
        enabled: true
        routerMode: sni-dnat
        service:
          type: LoadBalancer
          metadata:
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-type: nlb
              service.beta.kubernetes.io/aws-load-balancer-name: ingress-azure-mesh
              service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
            labels:
              federation.maistra.io/ingress-for: ingress-azure-mesh
          ports:
          - port: 15443
            name: tls
          - port: 8188
            name: https-discovery  # note HTTPS here
